
Fusion.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000050c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004b8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000050c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000053c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000092f  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000854  00000000  00000000  00000f03  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037e  00000000  00000000  00001757  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00001ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000408  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000166  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002122  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	88 c0       	rjmp	.+272    	; 0x142 <__vector_12>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__vector_21>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	70 d0       	rcall	.+224    	; 0x17a <main>
  9a:	0c c2       	rjmp	.+1048   	; 0x4b4 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <ADC_init>:
#include <avr/io.h>
#include <my_util.h>

void ADC_init(uint8_t channel)
{
	ADMUX |= nth(REFS0); // AVCC를 기준 전압으로 선택
  9e:	97 b1       	in	r25, 0x07	; 7
  a0:	90 64       	ori	r25, 0x40	; 64
  a2:	97 b9       	out	0x07, r25	; 7
	
	ADCSRA |= 0x07; // 분주비 설정
  a4:	96 b1       	in	r25, 0x06	; 6
  a6:	97 60       	ori	r25, 0x07	; 7
  a8:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= nth(ADEN); // ADC 활성화
  aa:	96 b1       	in	r25, 0x06	; 6
  ac:	90 68       	ori	r25, 0x80	; 128
  ae:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= nth(ADFR); // 프리러닝 모드
  b0:	96 b1       	in	r25, 0x06	; 6
  b2:	90 62       	ori	r25, 0x20	; 32
  b4:	96 b9       	out	0x06, r25	; 6
	
	ADMUX = ((ADMUX & 0xE0) | channel); // 채널 선택
  b6:	97 b1       	in	r25, 0x07	; 7
  b8:	90 7e       	andi	r25, 0xE0	; 224
  ba:	89 2b       	or	r24, r25
  bc:	87 b9       	out	0x07, r24	; 7
	
	ADCSRA |= nth(ADSC); // 변환 시작
  be:	86 b1       	in	r24, 0x06	; 6
  c0:	80 64       	ori	r24, 0x40	; 64
  c2:	86 b9       	out	0x06, r24	; 6
  c4:	08 95       	ret

000000c6 <__vector_21>:
	분주비를 256으로 하면
	비교 일치 = 16M / 256 = 62500
*/
#define MAX_PERIOD 62500

ISR(ADC_vect) { // ADC 변환 완료 ISR
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	0b b6       	in	r0, 0x3b	; 59
  d2:	0f 92       	push	r0
  d4:	2f 93       	push	r18
  d6:	3f 93       	push	r19
  d8:	4f 93       	push	r20
  da:	5f 93       	push	r21
  dc:	6f 93       	push	r22
  de:	7f 93       	push	r23
  e0:	8f 93       	push	r24
  e2:	9f 93       	push	r25
  e4:	af 93       	push	r26
  e6:	bf 93       	push	r27
  e8:	ef 93       	push	r30
  ea:	ff 93       	push	r31
	uint16_t tmp = (ADC / 1023.0) * MAX_PERIOD;
  ec:	64 b1       	in	r22, 0x04	; 4
  ee:	75 b1       	in	r23, 0x05	; 5
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	ee d0       	rcall	.+476    	; 0x2d2 <__floatunsisf>
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	30 ec       	ldi	r19, 0xC0	; 192
  fa:	4f e7       	ldi	r20, 0x7F	; 127
  fc:	54 e4       	ldi	r21, 0x44	; 68
  fe:	55 d0       	rcall	.+170    	; 0x1aa <__divsf3>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	34 e2       	ldi	r19, 0x24	; 36
 104:	44 e7       	ldi	r20, 0x74	; 116
 106:	57 e4       	ldi	r21, 0x47	; 71
 108:	72 d1       	rcall	.+740    	; 0x3ee <__mulsf3>
 10a:	b7 d0       	rcall	.+366    	; 0x27a <__fixunssfsi>
	
	if (tmp < MAX_PERIOD / 10)
 10c:	6a 36       	cpi	r22, 0x6A	; 106
 10e:	88 e1       	ldi	r24, 0x18	; 24
 110:	78 07       	cpc	r23, r24
 112:	10 f4       	brcc	.+4      	; 0x118 <__vector_21+0x52>
		tmp = MAX_PERIOD / 10;
 114:	6a e6       	ldi	r22, 0x6A	; 106
 116:	78 e1       	ldi	r23, 0x18	; 24
	
	OCR1A = tmp;
 118:	7b bd       	out	0x2b, r23	; 43
 11a:	6a bd       	out	0x2a, r22	; 42
}
 11c:	ff 91       	pop	r31
 11e:	ef 91       	pop	r30
 120:	bf 91       	pop	r27
 122:	af 91       	pop	r26
 124:	9f 91       	pop	r25
 126:	8f 91       	pop	r24
 128:	7f 91       	pop	r23
 12a:	6f 91       	pop	r22
 12c:	5f 91       	pop	r21
 12e:	4f 91       	pop	r20
 130:	3f 91       	pop	r19
 132:	2f 91       	pop	r18
 134:	0f 90       	pop	r0
 136:	0b be       	out	0x3b, r0	; 59
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <__vector_12>:

ISR(TIMER1_COMPA_vect) {
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	2f 93       	push	r18
 14e:	8f 93       	push	r24
 150:	9f 93       	push	r25
	PORTB = lrs(PORTB, 1);
 152:	28 b3       	in	r18, 0x18	; 24
 154:	98 b3       	in	r25, 0x18	; 24
 156:	89 2f       	mov	r24, r25
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	92 2f       	mov	r25, r18
 160:	99 1f       	adc	r25, r25
 162:	99 27       	eor	r25, r25
 164:	99 1f       	adc	r25, r25
 166:	89 2b       	or	r24, r25
 168:	88 bb       	out	0x18, r24	; 24
}
 16a:	9f 91       	pop	r25
 16c:	8f 91       	pop	r24
 16e:	2f 91       	pop	r18
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <main>:

int main(void)
{
    DDRB = 0xFF; // OUTPUT: LED
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x01;
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	88 bb       	out	0x18, r24	; 24
	
	// 타이머/카운터	
	TCCR1B |= nth(WGM12); // CTC 모드
 182:	8e b5       	in	r24, 0x2e	; 46
 184:	88 60       	ori	r24, 0x08	; 8
 186:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= nth(CS12); // 분주비를 256으로 설정
 188:	8e b5       	in	r24, 0x2e	; 46
 18a:	84 60       	ori	r24, 0x04	; 4
 18c:	8e bd       	out	0x2e, r24	; 46
	
	OCR1A = MAX_PERIOD; // 비교 일치값 설정. 1초
 18e:	84 e2       	ldi	r24, 0x24	; 36
 190:	94 ef       	ldi	r25, 0xF4	; 244
 192:	9b bd       	out	0x2b, r25	; 43
 194:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= nth(OCIE1A); // 비교 일치 A 인터럽트 활성화
 196:	87 b7       	in	r24, 0x37	; 55
 198:	80 61       	ori	r24, 0x10	; 16
 19a:	87 bf       	out	0x37, r24	; 55
	
	// ADC
	ADCSRA |= nth(ADIE); // ADC 변환 완료시 인터럽트 활성화
 19c:	86 b1       	in	r24, 0x06	; 6
 19e:	88 60       	ori	r24, 0x08	; 8
 1a0:	86 b9       	out	0x06, r24	; 6
	ADC_init(0); // ADC0(PF0)에서 아날로그 입력 받음
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	7c df       	rcall	.-264    	; 0x9e <ADC_init>
	
	sei();
 1a6:	78 94       	sei
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <main+0x2e>

000001aa <__divsf3>:
 1aa:	0c d0       	rcall	.+24     	; 0x1c4 <__divsf3x>
 1ac:	e6 c0       	rjmp	.+460    	; 0x37a <__fp_round>
 1ae:	de d0       	rcall	.+444    	; 0x36c <__fp_pscB>
 1b0:	40 f0       	brcs	.+16     	; 0x1c2 <__divsf3+0x18>
 1b2:	d5 d0       	rcall	.+426    	; 0x35e <__fp_pscA>
 1b4:	30 f0       	brcs	.+12     	; 0x1c2 <__divsf3+0x18>
 1b6:	21 f4       	brne	.+8      	; 0x1c0 <__divsf3+0x16>
 1b8:	5f 3f       	cpi	r21, 0xFF	; 255
 1ba:	19 f0       	breq	.+6      	; 0x1c2 <__divsf3+0x18>
 1bc:	c7 c0       	rjmp	.+398    	; 0x34c <__fp_inf>
 1be:	51 11       	cpse	r21, r1
 1c0:	10 c1       	rjmp	.+544    	; 0x3e2 <__fp_szero>
 1c2:	ca c0       	rjmp	.+404    	; 0x358 <__fp_nan>

000001c4 <__divsf3x>:
 1c4:	eb d0       	rcall	.+470    	; 0x39c <__fp_split3>
 1c6:	98 f3       	brcs	.-26     	; 0x1ae <__divsf3+0x4>

000001c8 <__divsf3_pse>:
 1c8:	99 23       	and	r25, r25
 1ca:	c9 f3       	breq	.-14     	; 0x1be <__divsf3+0x14>
 1cc:	55 23       	and	r21, r21
 1ce:	b1 f3       	breq	.-20     	; 0x1bc <__divsf3+0x12>
 1d0:	95 1b       	sub	r25, r21
 1d2:	55 0b       	sbc	r21, r21
 1d4:	bb 27       	eor	r27, r27
 1d6:	aa 27       	eor	r26, r26
 1d8:	62 17       	cp	r22, r18
 1da:	73 07       	cpc	r23, r19
 1dc:	84 07       	cpc	r24, r20
 1de:	38 f0       	brcs	.+14     	; 0x1ee <__divsf3_pse+0x26>
 1e0:	9f 5f       	subi	r25, 0xFF	; 255
 1e2:	5f 4f       	sbci	r21, 0xFF	; 255
 1e4:	22 0f       	add	r18, r18
 1e6:	33 1f       	adc	r19, r19
 1e8:	44 1f       	adc	r20, r20
 1ea:	aa 1f       	adc	r26, r26
 1ec:	a9 f3       	breq	.-22     	; 0x1d8 <__divsf3_pse+0x10>
 1ee:	33 d0       	rcall	.+102    	; 0x256 <__divsf3_pse+0x8e>
 1f0:	0e 2e       	mov	r0, r30
 1f2:	3a f0       	brmi	.+14     	; 0x202 <__divsf3_pse+0x3a>
 1f4:	e0 e8       	ldi	r30, 0x80	; 128
 1f6:	30 d0       	rcall	.+96     	; 0x258 <__divsf3_pse+0x90>
 1f8:	91 50       	subi	r25, 0x01	; 1
 1fa:	50 40       	sbci	r21, 0x00	; 0
 1fc:	e6 95       	lsr	r30
 1fe:	00 1c       	adc	r0, r0
 200:	ca f7       	brpl	.-14     	; 0x1f4 <__divsf3_pse+0x2c>
 202:	29 d0       	rcall	.+82     	; 0x256 <__divsf3_pse+0x8e>
 204:	fe 2f       	mov	r31, r30
 206:	27 d0       	rcall	.+78     	; 0x256 <__divsf3_pse+0x8e>
 208:	66 0f       	add	r22, r22
 20a:	77 1f       	adc	r23, r23
 20c:	88 1f       	adc	r24, r24
 20e:	bb 1f       	adc	r27, r27
 210:	26 17       	cp	r18, r22
 212:	37 07       	cpc	r19, r23
 214:	48 07       	cpc	r20, r24
 216:	ab 07       	cpc	r26, r27
 218:	b0 e8       	ldi	r27, 0x80	; 128
 21a:	09 f0       	breq	.+2      	; 0x21e <__divsf3_pse+0x56>
 21c:	bb 0b       	sbc	r27, r27
 21e:	80 2d       	mov	r24, r0
 220:	bf 01       	movw	r22, r30
 222:	ff 27       	eor	r31, r31
 224:	93 58       	subi	r25, 0x83	; 131
 226:	5f 4f       	sbci	r21, 0xFF	; 255
 228:	2a f0       	brmi	.+10     	; 0x234 <__divsf3_pse+0x6c>
 22a:	9e 3f       	cpi	r25, 0xFE	; 254
 22c:	51 05       	cpc	r21, r1
 22e:	68 f0       	brcs	.+26     	; 0x24a <__divsf3_pse+0x82>
 230:	8d c0       	rjmp	.+282    	; 0x34c <__fp_inf>
 232:	d7 c0       	rjmp	.+430    	; 0x3e2 <__fp_szero>
 234:	5f 3f       	cpi	r21, 0xFF	; 255
 236:	ec f3       	brlt	.-6      	; 0x232 <__divsf3_pse+0x6a>
 238:	98 3e       	cpi	r25, 0xE8	; 232
 23a:	dc f3       	brlt	.-10     	; 0x232 <__divsf3_pse+0x6a>
 23c:	86 95       	lsr	r24
 23e:	77 95       	ror	r23
 240:	67 95       	ror	r22
 242:	b7 95       	ror	r27
 244:	f7 95       	ror	r31
 246:	9f 5f       	subi	r25, 0xFF	; 255
 248:	c9 f7       	brne	.-14     	; 0x23c <__divsf3_pse+0x74>
 24a:	88 0f       	add	r24, r24
 24c:	91 1d       	adc	r25, r1
 24e:	96 95       	lsr	r25
 250:	87 95       	ror	r24
 252:	97 f9       	bld	r25, 7
 254:	08 95       	ret
 256:	e1 e0       	ldi	r30, 0x01	; 1
 258:	66 0f       	add	r22, r22
 25a:	77 1f       	adc	r23, r23
 25c:	88 1f       	adc	r24, r24
 25e:	bb 1f       	adc	r27, r27
 260:	62 17       	cp	r22, r18
 262:	73 07       	cpc	r23, r19
 264:	84 07       	cpc	r24, r20
 266:	ba 07       	cpc	r27, r26
 268:	20 f0       	brcs	.+8      	; 0x272 <__divsf3_pse+0xaa>
 26a:	62 1b       	sub	r22, r18
 26c:	73 0b       	sbc	r23, r19
 26e:	84 0b       	sbc	r24, r20
 270:	ba 0b       	sbc	r27, r26
 272:	ee 1f       	adc	r30, r30
 274:	88 f7       	brcc	.-30     	; 0x258 <__divsf3_pse+0x90>
 276:	e0 95       	com	r30
 278:	08 95       	ret

0000027a <__fixunssfsi>:
 27a:	98 d0       	rcall	.+304    	; 0x3ac <__fp_splitA>
 27c:	88 f0       	brcs	.+34     	; 0x2a0 <__fixunssfsi+0x26>
 27e:	9f 57       	subi	r25, 0x7F	; 127
 280:	90 f0       	brcs	.+36     	; 0x2a6 <__fixunssfsi+0x2c>
 282:	b9 2f       	mov	r27, r25
 284:	99 27       	eor	r25, r25
 286:	b7 51       	subi	r27, 0x17	; 23
 288:	a0 f0       	brcs	.+40     	; 0x2b2 <__fixunssfsi+0x38>
 28a:	d1 f0       	breq	.+52     	; 0x2c0 <__fixunssfsi+0x46>
 28c:	66 0f       	add	r22, r22
 28e:	77 1f       	adc	r23, r23
 290:	88 1f       	adc	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	1a f0       	brmi	.+6      	; 0x29c <__fixunssfsi+0x22>
 296:	ba 95       	dec	r27
 298:	c9 f7       	brne	.-14     	; 0x28c <__fixunssfsi+0x12>
 29a:	12 c0       	rjmp	.+36     	; 0x2c0 <__fixunssfsi+0x46>
 29c:	b1 30       	cpi	r27, 0x01	; 1
 29e:	81 f0       	breq	.+32     	; 0x2c0 <__fixunssfsi+0x46>
 2a0:	9f d0       	rcall	.+318    	; 0x3e0 <__fp_zero>
 2a2:	b1 e0       	ldi	r27, 0x01	; 1
 2a4:	08 95       	ret
 2a6:	9c c0       	rjmp	.+312    	; 0x3e0 <__fp_zero>
 2a8:	67 2f       	mov	r22, r23
 2aa:	78 2f       	mov	r23, r24
 2ac:	88 27       	eor	r24, r24
 2ae:	b8 5f       	subi	r27, 0xF8	; 248
 2b0:	39 f0       	breq	.+14     	; 0x2c0 <__fixunssfsi+0x46>
 2b2:	b9 3f       	cpi	r27, 0xF9	; 249
 2b4:	cc f3       	brlt	.-14     	; 0x2a8 <__fixunssfsi+0x2e>
 2b6:	86 95       	lsr	r24
 2b8:	77 95       	ror	r23
 2ba:	67 95       	ror	r22
 2bc:	b3 95       	inc	r27
 2be:	d9 f7       	brne	.-10     	; 0x2b6 <__fixunssfsi+0x3c>
 2c0:	3e f4       	brtc	.+14     	; 0x2d0 <__fixunssfsi+0x56>
 2c2:	90 95       	com	r25
 2c4:	80 95       	com	r24
 2c6:	70 95       	com	r23
 2c8:	61 95       	neg	r22
 2ca:	7f 4f       	sbci	r23, 0xFF	; 255
 2cc:	8f 4f       	sbci	r24, 0xFF	; 255
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	08 95       	ret

000002d2 <__floatunsisf>:
 2d2:	e8 94       	clt
 2d4:	09 c0       	rjmp	.+18     	; 0x2e8 <__floatsisf+0x12>

000002d6 <__floatsisf>:
 2d6:	97 fb       	bst	r25, 7
 2d8:	3e f4       	brtc	.+14     	; 0x2e8 <__floatsisf+0x12>
 2da:	90 95       	com	r25
 2dc:	80 95       	com	r24
 2de:	70 95       	com	r23
 2e0:	61 95       	neg	r22
 2e2:	7f 4f       	sbci	r23, 0xFF	; 255
 2e4:	8f 4f       	sbci	r24, 0xFF	; 255
 2e6:	9f 4f       	sbci	r25, 0xFF	; 255
 2e8:	99 23       	and	r25, r25
 2ea:	a9 f0       	breq	.+42     	; 0x316 <__floatsisf+0x40>
 2ec:	f9 2f       	mov	r31, r25
 2ee:	96 e9       	ldi	r25, 0x96	; 150
 2f0:	bb 27       	eor	r27, r27
 2f2:	93 95       	inc	r25
 2f4:	f6 95       	lsr	r31
 2f6:	87 95       	ror	r24
 2f8:	77 95       	ror	r23
 2fa:	67 95       	ror	r22
 2fc:	b7 95       	ror	r27
 2fe:	f1 11       	cpse	r31, r1
 300:	f8 cf       	rjmp	.-16     	; 0x2f2 <__floatsisf+0x1c>
 302:	fa f4       	brpl	.+62     	; 0x342 <__floatsisf+0x6c>
 304:	bb 0f       	add	r27, r27
 306:	11 f4       	brne	.+4      	; 0x30c <__floatsisf+0x36>
 308:	60 ff       	sbrs	r22, 0
 30a:	1b c0       	rjmp	.+54     	; 0x342 <__floatsisf+0x6c>
 30c:	6f 5f       	subi	r22, 0xFF	; 255
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	8f 4f       	sbci	r24, 0xFF	; 255
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	16 c0       	rjmp	.+44     	; 0x342 <__floatsisf+0x6c>
 316:	88 23       	and	r24, r24
 318:	11 f0       	breq	.+4      	; 0x31e <__floatsisf+0x48>
 31a:	96 e9       	ldi	r25, 0x96	; 150
 31c:	11 c0       	rjmp	.+34     	; 0x340 <__floatsisf+0x6a>
 31e:	77 23       	and	r23, r23
 320:	21 f0       	breq	.+8      	; 0x32a <__floatsisf+0x54>
 322:	9e e8       	ldi	r25, 0x8E	; 142
 324:	87 2f       	mov	r24, r23
 326:	76 2f       	mov	r23, r22
 328:	05 c0       	rjmp	.+10     	; 0x334 <__floatsisf+0x5e>
 32a:	66 23       	and	r22, r22
 32c:	71 f0       	breq	.+28     	; 0x34a <__floatsisf+0x74>
 32e:	96 e8       	ldi	r25, 0x86	; 134
 330:	86 2f       	mov	r24, r22
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	2a f0       	brmi	.+10     	; 0x342 <__floatsisf+0x6c>
 338:	9a 95       	dec	r25
 33a:	66 0f       	add	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	88 1f       	adc	r24, r24
 340:	da f7       	brpl	.-10     	; 0x338 <__floatsisf+0x62>
 342:	88 0f       	add	r24, r24
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	97 f9       	bld	r25, 7
 34a:	08 95       	ret

0000034c <__fp_inf>:
 34c:	97 f9       	bld	r25, 7
 34e:	9f 67       	ori	r25, 0x7F	; 127
 350:	80 e8       	ldi	r24, 0x80	; 128
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	60 e0       	ldi	r22, 0x00	; 0
 356:	08 95       	ret

00000358 <__fp_nan>:
 358:	9f ef       	ldi	r25, 0xFF	; 255
 35a:	80 ec       	ldi	r24, 0xC0	; 192
 35c:	08 95       	ret

0000035e <__fp_pscA>:
 35e:	00 24       	eor	r0, r0
 360:	0a 94       	dec	r0
 362:	16 16       	cp	r1, r22
 364:	17 06       	cpc	r1, r23
 366:	18 06       	cpc	r1, r24
 368:	09 06       	cpc	r0, r25
 36a:	08 95       	ret

0000036c <__fp_pscB>:
 36c:	00 24       	eor	r0, r0
 36e:	0a 94       	dec	r0
 370:	12 16       	cp	r1, r18
 372:	13 06       	cpc	r1, r19
 374:	14 06       	cpc	r1, r20
 376:	05 06       	cpc	r0, r21
 378:	08 95       	ret

0000037a <__fp_round>:
 37a:	09 2e       	mov	r0, r25
 37c:	03 94       	inc	r0
 37e:	00 0c       	add	r0, r0
 380:	11 f4       	brne	.+4      	; 0x386 <__fp_round+0xc>
 382:	88 23       	and	r24, r24
 384:	52 f0       	brmi	.+20     	; 0x39a <__fp_round+0x20>
 386:	bb 0f       	add	r27, r27
 388:	40 f4       	brcc	.+16     	; 0x39a <__fp_round+0x20>
 38a:	bf 2b       	or	r27, r31
 38c:	11 f4       	brne	.+4      	; 0x392 <__fp_round+0x18>
 38e:	60 ff       	sbrs	r22, 0
 390:	04 c0       	rjmp	.+8      	; 0x39a <__fp_round+0x20>
 392:	6f 5f       	subi	r22, 0xFF	; 255
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	08 95       	ret

0000039c <__fp_split3>:
 39c:	57 fd       	sbrc	r21, 7
 39e:	90 58       	subi	r25, 0x80	; 128
 3a0:	44 0f       	add	r20, r20
 3a2:	55 1f       	adc	r21, r21
 3a4:	59 f0       	breq	.+22     	; 0x3bc <__fp_splitA+0x10>
 3a6:	5f 3f       	cpi	r21, 0xFF	; 255
 3a8:	71 f0       	breq	.+28     	; 0x3c6 <__fp_splitA+0x1a>
 3aa:	47 95       	ror	r20

000003ac <__fp_splitA>:
 3ac:	88 0f       	add	r24, r24
 3ae:	97 fb       	bst	r25, 7
 3b0:	99 1f       	adc	r25, r25
 3b2:	61 f0       	breq	.+24     	; 0x3cc <__fp_splitA+0x20>
 3b4:	9f 3f       	cpi	r25, 0xFF	; 255
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <__fp_splitA+0x2a>
 3b8:	87 95       	ror	r24
 3ba:	08 95       	ret
 3bc:	12 16       	cp	r1, r18
 3be:	13 06       	cpc	r1, r19
 3c0:	14 06       	cpc	r1, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	f2 cf       	rjmp	.-28     	; 0x3aa <__fp_split3+0xe>
 3c6:	46 95       	lsr	r20
 3c8:	f1 df       	rcall	.-30     	; 0x3ac <__fp_splitA>
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <__fp_splitA+0x30>
 3cc:	16 16       	cp	r1, r22
 3ce:	17 06       	cpc	r1, r23
 3d0:	18 06       	cpc	r1, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	f1 cf       	rjmp	.-30     	; 0x3b8 <__fp_splitA+0xc>
 3d6:	86 95       	lsr	r24
 3d8:	71 05       	cpc	r23, r1
 3da:	61 05       	cpc	r22, r1
 3dc:	08 94       	sec
 3de:	08 95       	ret

000003e0 <__fp_zero>:
 3e0:	e8 94       	clt

000003e2 <__fp_szero>:
 3e2:	bb 27       	eor	r27, r27
 3e4:	66 27       	eor	r22, r22
 3e6:	77 27       	eor	r23, r23
 3e8:	cb 01       	movw	r24, r22
 3ea:	97 f9       	bld	r25, 7
 3ec:	08 95       	ret

000003ee <__mulsf3>:
 3ee:	0b d0       	rcall	.+22     	; 0x406 <__mulsf3x>
 3f0:	c4 cf       	rjmp	.-120    	; 0x37a <__fp_round>
 3f2:	b5 df       	rcall	.-150    	; 0x35e <__fp_pscA>
 3f4:	28 f0       	brcs	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f6:	ba df       	rcall	.-140    	; 0x36c <__fp_pscB>
 3f8:	18 f0       	brcs	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	95 23       	and	r25, r21
 3fc:	09 f0       	breq	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fe:	a6 cf       	rjmp	.-180    	; 0x34c <__fp_inf>
 400:	ab cf       	rjmp	.-170    	; 0x358 <__fp_nan>
 402:	11 24       	eor	r1, r1
 404:	ee cf       	rjmp	.-36     	; 0x3e2 <__fp_szero>

00000406 <__mulsf3x>:
 406:	ca df       	rcall	.-108    	; 0x39c <__fp_split3>
 408:	a0 f3       	brcs	.-24     	; 0x3f2 <__mulsf3+0x4>

0000040a <__mulsf3_pse>:
 40a:	95 9f       	mul	r25, r21
 40c:	d1 f3       	breq	.-12     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 40e:	95 0f       	add	r25, r21
 410:	50 e0       	ldi	r21, 0x00	; 0
 412:	55 1f       	adc	r21, r21
 414:	62 9f       	mul	r22, r18
 416:	f0 01       	movw	r30, r0
 418:	72 9f       	mul	r23, r18
 41a:	bb 27       	eor	r27, r27
 41c:	f0 0d       	add	r31, r0
 41e:	b1 1d       	adc	r27, r1
 420:	63 9f       	mul	r22, r19
 422:	aa 27       	eor	r26, r26
 424:	f0 0d       	add	r31, r0
 426:	b1 1d       	adc	r27, r1
 428:	aa 1f       	adc	r26, r26
 42a:	64 9f       	mul	r22, r20
 42c:	66 27       	eor	r22, r22
 42e:	b0 0d       	add	r27, r0
 430:	a1 1d       	adc	r26, r1
 432:	66 1f       	adc	r22, r22
 434:	82 9f       	mul	r24, r18
 436:	22 27       	eor	r18, r18
 438:	b0 0d       	add	r27, r0
 43a:	a1 1d       	adc	r26, r1
 43c:	62 1f       	adc	r22, r18
 43e:	73 9f       	mul	r23, r19
 440:	b0 0d       	add	r27, r0
 442:	a1 1d       	adc	r26, r1
 444:	62 1f       	adc	r22, r18
 446:	83 9f       	mul	r24, r19
 448:	a0 0d       	add	r26, r0
 44a:	61 1d       	adc	r22, r1
 44c:	22 1f       	adc	r18, r18
 44e:	74 9f       	mul	r23, r20
 450:	33 27       	eor	r19, r19
 452:	a0 0d       	add	r26, r0
 454:	61 1d       	adc	r22, r1
 456:	23 1f       	adc	r18, r19
 458:	84 9f       	mul	r24, r20
 45a:	60 0d       	add	r22, r0
 45c:	21 1d       	adc	r18, r1
 45e:	82 2f       	mov	r24, r18
 460:	76 2f       	mov	r23, r22
 462:	6a 2f       	mov	r22, r26
 464:	11 24       	eor	r1, r1
 466:	9f 57       	subi	r25, 0x7F	; 127
 468:	50 40       	sbci	r21, 0x00	; 0
 46a:	8a f0       	brmi	.+34     	; 0x48e <__mulsf3_pse+0x84>
 46c:	e1 f0       	breq	.+56     	; 0x4a6 <__mulsf3_pse+0x9c>
 46e:	88 23       	and	r24, r24
 470:	4a f0       	brmi	.+18     	; 0x484 <__mulsf3_pse+0x7a>
 472:	ee 0f       	add	r30, r30
 474:	ff 1f       	adc	r31, r31
 476:	bb 1f       	adc	r27, r27
 478:	66 1f       	adc	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	91 50       	subi	r25, 0x01	; 1
 480:	50 40       	sbci	r21, 0x00	; 0
 482:	a9 f7       	brne	.-22     	; 0x46e <__mulsf3_pse+0x64>
 484:	9e 3f       	cpi	r25, 0xFE	; 254
 486:	51 05       	cpc	r21, r1
 488:	70 f0       	brcs	.+28     	; 0x4a6 <__mulsf3_pse+0x9c>
 48a:	60 cf       	rjmp	.-320    	; 0x34c <__fp_inf>
 48c:	aa cf       	rjmp	.-172    	; 0x3e2 <__fp_szero>
 48e:	5f 3f       	cpi	r21, 0xFF	; 255
 490:	ec f3       	brlt	.-6      	; 0x48c <__mulsf3_pse+0x82>
 492:	98 3e       	cpi	r25, 0xE8	; 232
 494:	dc f3       	brlt	.-10     	; 0x48c <__mulsf3_pse+0x82>
 496:	86 95       	lsr	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f7 95       	ror	r31
 4a0:	e7 95       	ror	r30
 4a2:	9f 5f       	subi	r25, 0xFF	; 255
 4a4:	c1 f7       	brne	.-16     	; 0x496 <__mulsf3_pse+0x8c>
 4a6:	fe 2b       	or	r31, r30
 4a8:	88 0f       	add	r24, r24
 4aa:	91 1d       	adc	r25, r1
 4ac:	96 95       	lsr	r25
 4ae:	87 95       	ror	r24
 4b0:	97 f9       	bld	r25, 7
 4b2:	08 95       	ret

000004b4 <_exit>:
 4b4:	f8 94       	cli

000004b6 <__stop_program>:
 4b6:	ff cf       	rjmp	.-2      	; 0x4b6 <__stop_program>
