
I2C_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000864  000008f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000864  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800116  00800116  0000090e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000090e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000009ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f61  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aad  00000000  00000000  000019f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000070d  00000000  00000000  000024a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  00002bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059f  00000000  00000000  00002d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000045a  00000000  00000000  0000331b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003775  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e6       	ldi	r30, 0x64	; 100
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 31       	cpi	r26, 0x16	; 22
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e1       	ldi	r26, 0x16	; 22
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 31       	cpi	r26, 0x17	; 23
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bc d0       	rcall	.+376    	; 0x23c <main>
  c4:	cd c3       	rjmp	.+1946   	; 0x860 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <I2C_Init>:
  c8:	81 b3       	in	r24, 0x11	; 17
  ca:	83 60       	ori	r24, 0x03	; 3
  cc:	81 bb       	out	0x11, r24	; 17
  ce:	88 e4       	ldi	r24, 0x48	; 72
  d0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  d4:	08 95       	ret

000000d6 <I2C_Start>:
  d6:	84 ea       	ldi	r24, 0xA4	; 164
  d8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  dc:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  e0:	88 23       	and	r24, r24
  e2:	e4 f7       	brge	.-8      	; 0xdc <I2C_Start+0x6>
  e4:	08 95       	ret

000000e6 <I2C_TxData>:
  e6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
  ea:	84 e8       	ldi	r24, 0x84	; 132
  ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  f0:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  f4:	88 23       	and	r24, r24
  f6:	e4 f7       	brge	.-8      	; 0xf0 <I2C_TxData+0xa>
  f8:	08 95       	ret

000000fa <I2C_Stop>:
  fa:	84 e9       	ldi	r24, 0x94	; 148
  fc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 100:	08 95       	ret

00000102 <I2C_TxByte>:
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	d8 2f       	mov	r29, r24
 108:	c6 2f       	mov	r28, r22
 10a:	e5 df       	rcall	.-54     	; 0xd6 <I2C_Start>
 10c:	8d 2f       	mov	r24, r29
 10e:	eb df       	rcall	.-42     	; 0xe6 <I2C_TxData>
 110:	8c 2f       	mov	r24, r28
 112:	e9 df       	rcall	.-46     	; 0xe6 <I2C_TxData>
 114:	f2 df       	rcall	.-28     	; 0xfa <I2C_Stop>
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <LCDCommandMode>:
 11c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR_W, I2C_LCD_Data);
}
void LCD_BackLightOff(void)
{
	I2C_LCD_Data &= ~(1<<LCD_BACKLIGT);
	I2C_TxByte(LCD_DEV_ADDR_W, I2C_LCD_Data);
 120:	8e 7f       	andi	r24, 0xFE	; 254
 122:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 126:	08 95       	ret

00000128 <LCDDataMode>:
 128:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 132:	08 95       	ret

00000134 <LCDWriteMode>:
 134:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 138:	8d 7f       	andi	r24, 0xFD	; 253
 13a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 13e:	08 95       	ret

00000140 <LCD_BackLightOn>:
 140:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end>
 144:	68 60       	ori	r22, 0x08	; 8
 146:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
 14a:	8e e4       	ldi	r24, 0x4E	; 78
 14c:	da cf       	rjmp	.-76     	; 0x102 <I2C_TxByte>
 14e:	08 95       	ret

00000150 <LCDEnable>:
	//4. enable pin을 0>1>0 으로 실행
	//LCD_ENABLE_PORT &= ~(1<<LCD_ENABLE);
	//LCD_ENABLE_PORT |= (1<<LCD_ENABLE);
	//LCD_ENABLE_PORT &= ~(1<<LCD_ENABLE);
	
	I2C_LCD_Data &= ~(1<<LCD_ENABLE);
 150:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end>
 154:	6b 7f       	andi	r22, 0xFB	; 251
 156:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR_W, I2C_LCD_Data);
 15a:	8e e4       	ldi	r24, 0x4E	; 78
 15c:	d2 df       	rcall	.-92     	; 0x102 <I2C_TxByte>
	I2C_LCD_Data |= (1<<LCD_ENABLE);
 15e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end>
 162:	64 60       	ori	r22, 0x04	; 4
 164:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR_W, I2C_LCD_Data);
 168:	8e e4       	ldi	r24, 0x4E	; 78
 16a:	cb df       	rcall	.-106    	; 0x102 <I2C_TxByte>
	I2C_LCD_Data &= ~(1<<LCD_ENABLE);
 16c:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end>
 170:	6b 7f       	andi	r22, 0xFB	; 251
 172:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR_W, I2C_LCD_Data);
 176:	8e e4       	ldi	r24, 0x4E	; 78
 178:	c4 df       	rcall	.-120    	; 0x102 <I2C_TxByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17a:	8f e1       	ldi	r24, 0x1F	; 31
 17c:	9c e1       	ldi	r25, 0x1C	; 28
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <LCDEnable+0x2e>
 182:	00 c0       	rjmp	.+0      	; 0x184 <LCDEnable+0x34>
 184:	00 00       	nop
 186:	08 95       	ret

00000188 <LCD_SendData4bit>:
{
	//3. 입력된 data 출력
	LCD_DATA_PORT = data;
}
void LCD_SendData4bit(uint8_t data)
{
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
	I2C_LCD_Data = (I2C_LCD_Data & 0x0f) | (data & 0xf0);
 18c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 190:	8f 70       	andi	r24, 0x0F	; 15
 192:	9c 2f       	mov	r25, r28
 194:	90 7f       	andi	r25, 0xF0	; 240
 196:	89 2b       	or	r24, r25
 198:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
	LCDEnable();
 19c:	d9 df       	rcall	.-78     	; 0x150 <LCDEnable>
	I2C_LCD_Data = (I2C_LCD_Data & 0x0f) | ((data & 0x0f)<<4);
 19e:	20 e1       	ldi	r18, 0x10	; 16
 1a0:	c2 9f       	mul	r28, r18
 1a2:	c0 01       	movw	r24, r0
 1a4:	11 24       	eor	r1, r1
 1a6:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <__data_end>
 1aa:	9f 70       	andi	r25, 0x0F	; 15
 1ac:	89 2b       	or	r24, r25
 1ae:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
	LCDEnable();
 1b2:	ce df       	rcall	.-100    	; 0x150 <LCDEnable>
}
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <LCDWriteCommand>:
	//딜레이를 줘야 깨지지 않고 나옴
	_delay_us(1800);
}

void LCDWriteCommand(uint8_t cmdData)
{
 1b8:	cf 93       	push	r28
 1ba:	c8 2f       	mov	r28, r24
	
	LCDCommandMode();
 1bc:	af df       	rcall	.-162    	; 0x11c <LCDCommandMode>
	LCDWriteMode();
 1be:	ba df       	rcall	.-140    	; 0x134 <LCDWriteMode>
	LCD_SendData4bit(cmdData);
 1c0:	8c 2f       	mov	r24, r28
 1c2:	e2 df       	rcall	.-60     	; 0x188 <LCD_SendData4bit>
 1c4:	cf 91       	pop	r28
	//LCDEnable();
}
 1c6:	08 95       	ret

000001c8 <LCDWriteData>:
 1c8:	cf 93       	push	r28

void LCDWriteData(uint8_t charData)
{
 1ca:	c8 2f       	mov	r28, r24
	LCDDataMode();
 1cc:	ad df       	rcall	.-166    	; 0x128 <LCDDataMode>
	LCDWriteMode();
 1ce:	b2 df       	rcall	.-156    	; 0x134 <LCDWriteMode>
	LCD_SendData4bit(charData);
 1d0:	8c 2f       	mov	r24, r28
 1d2:	da df       	rcall	.-76     	; 0x188 <LCD_SendData4bit>
 1d4:	cf 91       	pop	r28
	//LCDEnable();
}
 1d6:	08 95       	ret

000001d8 <LCDInit>:
 1d8:	77 df       	rcall	.-274    	; 0xc8 <I2C_Init>
	//LCDWriteCommand(0x03); 
	//_delay_ms(5);
	//LCDWriteCommand(0x03); 
	//_delay_ms(1);
	//LCDWriteCommand(0x03); 
	LCDWriteCommand(0x02); 
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	ed df       	rcall	.-38     	; 0x1b8 <LCDWriteCommand>
	LCDWriteCommand(COMMAND_FUCTION_SET_4BIT); //4bit function set
 1de:	88 e2       	ldi	r24, 0x28	; 40
 1e0:	eb df       	rcall	.-42     	; 0x1b8 <LCDWriteCommand>
	//LCDWriteCommand(COMMAND_DISPLAY_OFF); //display off
	LCDWriteCommand(COMMAND_DISPLAY_CLEAR); //display clear
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	e9 df       	rcall	.-46     	; 0x1b8 <LCDWriteCommand>
	LCDWriteCommand(COMMAND_ENTRY_MODE_SET); //entry mode set 0b00000110
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	e7 df       	rcall	.-50     	; 0x1b8 <LCDWriteCommand>
	LCDWriteCommand(COMMAND_DISPLAY_ON);
 1ea:	8c e0       	ldi	r24, 0x0C	; 12
 1ec:	e5 df       	rcall	.-54     	; 0x1b8 <LCDWriteCommand>
 1ee:	a8 cf       	rjmp	.-176    	; 0x140 <LCD_BackLightOn>
	LCD_BackLightOn();
 1f0:	08 95       	ret

000001f2 <LCDWriteString>:
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
}

void LCDWriteString(char *string)
{
 1f6:	cf 93       	push	r28
 1f8:	8c 01       	movw	r16, r24
	for(uint8_t i=0;string[i];i++)
 1fa:	c0 e0       	ldi	r28, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <LCDWriteString+0x10>
	{
		LCDWriteData(string[i]);
 1fe:	e4 df       	rcall	.-56     	; 0x1c8 <LCDWriteData>
	LCD_BackLightOn();
}

void LCDWriteString(char *string)
{
	for(uint8_t i=0;string[i];i++)
 200:	cf 5f       	subi	r28, 0xFF	; 255
 202:	f8 01       	movw	r30, r16
 204:	ec 0f       	add	r30, r28
 206:	f1 1d       	adc	r31, r1
 208:	80 81       	ld	r24, Z
 20a:	81 11       	cpse	r24, r1
 20c:	f8 cf       	rjmp	.-16     	; 0x1fe <LCDWriteString+0xc>
	{
		LCDWriteData(string[i]);
	}
}
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	0f 91       	pop	r16
 214:	08 95       	ret

00000216 <LCDGoToXY>:
void LCDGoToXY(uint8_t row, uint8_t col)
{
	col %= 16;
 216:	6f 70       	andi	r22, 0x0F	; 15
	row %= 2;
 218:	81 70       	andi	r24, 0x01	; 1
	
	uint8_t address = (0x40 * row) + col;
 21a:	90 e4       	ldi	r25, 0x40	; 64
 21c:	89 9f       	mul	r24, r25
 21e:	60 0d       	add	r22, r0
 220:	11 24       	eor	r1, r1
 222:	86 2f       	mov	r24, r22
	uint8_t command =0x80 + address;
	LCDWriteCommand(command);
 224:	80 58       	subi	r24, 0x80	; 128
 226:	c8 cf       	rjmp	.-112    	; 0x1b8 <LCDWriteCommand>
 228:	08 95       	ret

0000022a <LCDWriteStringXY>:
}
void LCDWriteStringXY(uint8_t row, uint8_t col, char *string)
{
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	ea 01       	movw	r28, r20
	LCDGoToXY(row, col);
 230:	f2 df       	rcall	.-28     	; 0x216 <LCDGoToXY>
	LCDWriteString(string);
 232:	ce 01       	movw	r24, r28
 234:	de df       	rcall	.-68     	; 0x1f2 <LCDWriteString>
}
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	08 95       	ret

0000023c <main>:


//FILE OUTPUT = FDEV_SETUP_STREAM(UART0_Transmit, NULL, _FDEV_SETUP_WRITE);

int main(void)
{	
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
 244:	6e 97       	sbiw	r28, 0x1e	; 30
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	f8 94       	cli
 24a:	de bf       	out	0x3e, r29	; 62
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	cd bf       	out	0x3d, r28	; 61
	LCDInit();
 250:	c3 df       	rcall	.-122    	; 0x1d8 <LCDInit>
	//UART0_Init();
	//stdout =&OUTPUT;
	
	LCDWriteStringXY(0,0,"hello world");
 252:	40 e0       	ldi	r20, 0x00	; 0
 254:	51 e0       	ldi	r21, 0x01	; 1
 256:	60 e0       	ldi	r22, 0x00	; 0
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	e7 df       	rcall	.-50     	; 0x22a <LCDWriteStringXY>
	int c=0;
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 e0       	ldi	r25, 0x00	; 0
	char stbuf[30];
    while (1) 
    {
		sprintf(stbuf,"count :%d",c++);
 260:	7c 01       	movw	r14, r24
 262:	2f ef       	ldi	r18, 0xFF	; 255
 264:	e2 1a       	sub	r14, r18
 266:	f2 0a       	sbc	r15, r18
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	8c e0       	ldi	r24, 0x0C	; 12
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	9f 93       	push	r25
 272:	8f 93       	push	r24
 274:	8e 01       	movw	r16, r28
 276:	0f 5f       	subi	r16, 0xFF	; 255
 278:	1f 4f       	sbci	r17, 0xFF	; 255
 27a:	1f 93       	push	r17
 27c:	0f 93       	push	r16
 27e:	15 d0       	rcall	.+42     	; 0x2aa <sprintf>
		LCDWriteStringXY(1,0,stbuf);
 280:	a8 01       	movw	r20, r16
 282:	60 e0       	ldi	r22, 0x00	; 0
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	d1 df       	rcall	.-94     	; 0x22a <LCDWriteStringXY>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 288:	8f ef       	ldi	r24, 0xFF	; 255
 28a:	99 e6       	ldi	r25, 0x69	; 105
 28c:	28 e1       	ldi	r18, 0x18	; 24
 28e:	81 50       	subi	r24, 0x01	; 1
 290:	90 40       	sbci	r25, 0x00	; 0
 292:	20 40       	sbci	r18, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <main+0x52>
 296:	00 c0       	rjmp	.+0      	; 0x298 <main+0x5c>
 298:	00 00       	nop
	LCDWriteStringXY(0,0,"hello world");
	int c=0;
	char stbuf[30];
    while (1) 
    {
		sprintf(stbuf,"count :%d",c++);
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	c7 01       	movw	r24, r14
 2a8:	db cf       	rjmp	.-74     	; 0x260 <main+0x24>

000002aa <sprintf>:
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
 2b6:	2e 97       	sbiw	r28, 0x0e	; 14
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	f8 94       	cli
 2bc:	de bf       	out	0x3e, r29	; 62
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	cd bf       	out	0x3d, r28	; 61
 2c2:	0d 89       	ldd	r16, Y+21	; 0x15
 2c4:	1e 89       	ldd	r17, Y+22	; 0x16
 2c6:	86 e0       	ldi	r24, 0x06	; 6
 2c8:	8c 83       	std	Y+4, r24	; 0x04
 2ca:	1a 83       	std	Y+2, r17	; 0x02
 2cc:	09 83       	std	Y+1, r16	; 0x01
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	9f e7       	ldi	r25, 0x7F	; 127
 2d2:	9e 83       	std	Y+6, r25	; 0x06
 2d4:	8d 83       	std	Y+5, r24	; 0x05
 2d6:	ae 01       	movw	r20, r28
 2d8:	47 5e       	subi	r20, 0xE7	; 231
 2da:	5f 4f       	sbci	r21, 0xFF	; 255
 2dc:	6f 89       	ldd	r22, Y+23	; 0x17
 2de:	78 8d       	ldd	r23, Y+24	; 0x18
 2e0:	ce 01       	movw	r24, r28
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	10 d0       	rcall	.+32     	; 0x306 <vfprintf>
 2e6:	ef 81       	ldd	r30, Y+7	; 0x07
 2e8:	f8 85       	ldd	r31, Y+8	; 0x08
 2ea:	e0 0f       	add	r30, r16
 2ec:	f1 1f       	adc	r31, r17
 2ee:	10 82       	st	Z, r1
 2f0:	2e 96       	adiw	r28, 0x0e	; 14
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	de bf       	out	0x3e, r29	; 62
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	cd bf       	out	0x3d, r28	; 61
 2fc:	df 91       	pop	r29
 2fe:	cf 91       	pop	r28
 300:	1f 91       	pop	r17
 302:	0f 91       	pop	r16
 304:	08 95       	ret

00000306 <vfprintf>:
 306:	2f 92       	push	r2
 308:	3f 92       	push	r3
 30a:	4f 92       	push	r4
 30c:	5f 92       	push	r5
 30e:	6f 92       	push	r6
 310:	7f 92       	push	r7
 312:	8f 92       	push	r8
 314:	9f 92       	push	r9
 316:	af 92       	push	r10
 318:	bf 92       	push	r11
 31a:	cf 92       	push	r12
 31c:	df 92       	push	r13
 31e:	ef 92       	push	r14
 320:	ff 92       	push	r15
 322:	0f 93       	push	r16
 324:	1f 93       	push	r17
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
 32a:	cd b7       	in	r28, 0x3d	; 61
 32c:	de b7       	in	r29, 0x3e	; 62
 32e:	2b 97       	sbiw	r28, 0x0b	; 11
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	f8 94       	cli
 334:	de bf       	out	0x3e, r29	; 62
 336:	0f be       	out	0x3f, r0	; 63
 338:	cd bf       	out	0x3d, r28	; 61
 33a:	6c 01       	movw	r12, r24
 33c:	7b 01       	movw	r14, r22
 33e:	8a 01       	movw	r16, r20
 340:	fc 01       	movw	r30, r24
 342:	17 82       	std	Z+7, r1	; 0x07
 344:	16 82       	std	Z+6, r1	; 0x06
 346:	83 81       	ldd	r24, Z+3	; 0x03
 348:	81 ff       	sbrs	r24, 1
 34a:	bf c1       	rjmp	.+894    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 34c:	ce 01       	movw	r24, r28
 34e:	01 96       	adiw	r24, 0x01	; 1
 350:	3c 01       	movw	r6, r24
 352:	f6 01       	movw	r30, r12
 354:	93 81       	ldd	r25, Z+3	; 0x03
 356:	f7 01       	movw	r30, r14
 358:	93 fd       	sbrc	r25, 3
 35a:	85 91       	lpm	r24, Z+
 35c:	93 ff       	sbrs	r25, 3
 35e:	81 91       	ld	r24, Z+
 360:	7f 01       	movw	r14, r30
 362:	88 23       	and	r24, r24
 364:	09 f4       	brne	.+2      	; 0x368 <vfprintf+0x62>
 366:	ad c1       	rjmp	.+858    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 368:	85 32       	cpi	r24, 0x25	; 37
 36a:	39 f4       	brne	.+14     	; 0x37a <vfprintf+0x74>
 36c:	93 fd       	sbrc	r25, 3
 36e:	85 91       	lpm	r24, Z+
 370:	93 ff       	sbrs	r25, 3
 372:	81 91       	ld	r24, Z+
 374:	7f 01       	movw	r14, r30
 376:	85 32       	cpi	r24, 0x25	; 37
 378:	21 f4       	brne	.+8      	; 0x382 <vfprintf+0x7c>
 37a:	b6 01       	movw	r22, r12
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	d6 d1       	rcall	.+940    	; 0x72c <fputc>
 380:	e8 cf       	rjmp	.-48     	; 0x352 <vfprintf+0x4c>
 382:	91 2c       	mov	r9, r1
 384:	21 2c       	mov	r2, r1
 386:	31 2c       	mov	r3, r1
 388:	ff e1       	ldi	r31, 0x1F	; 31
 38a:	f3 15       	cp	r31, r3
 38c:	d8 f0       	brcs	.+54     	; 0x3c4 <vfprintf+0xbe>
 38e:	8b 32       	cpi	r24, 0x2B	; 43
 390:	79 f0       	breq	.+30     	; 0x3b0 <vfprintf+0xaa>
 392:	38 f4       	brcc	.+14     	; 0x3a2 <vfprintf+0x9c>
 394:	80 32       	cpi	r24, 0x20	; 32
 396:	79 f0       	breq	.+30     	; 0x3b6 <vfprintf+0xb0>
 398:	83 32       	cpi	r24, 0x23	; 35
 39a:	a1 f4       	brne	.+40     	; 0x3c4 <vfprintf+0xbe>
 39c:	23 2d       	mov	r18, r3
 39e:	20 61       	ori	r18, 0x10	; 16
 3a0:	1d c0       	rjmp	.+58     	; 0x3dc <vfprintf+0xd6>
 3a2:	8d 32       	cpi	r24, 0x2D	; 45
 3a4:	61 f0       	breq	.+24     	; 0x3be <vfprintf+0xb8>
 3a6:	80 33       	cpi	r24, 0x30	; 48
 3a8:	69 f4       	brne	.+26     	; 0x3c4 <vfprintf+0xbe>
 3aa:	23 2d       	mov	r18, r3
 3ac:	21 60       	ori	r18, 0x01	; 1
 3ae:	16 c0       	rjmp	.+44     	; 0x3dc <vfprintf+0xd6>
 3b0:	83 2d       	mov	r24, r3
 3b2:	82 60       	ori	r24, 0x02	; 2
 3b4:	38 2e       	mov	r3, r24
 3b6:	e3 2d       	mov	r30, r3
 3b8:	e4 60       	ori	r30, 0x04	; 4
 3ba:	3e 2e       	mov	r3, r30
 3bc:	2a c0       	rjmp	.+84     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3be:	f3 2d       	mov	r31, r3
 3c0:	f8 60       	ori	r31, 0x08	; 8
 3c2:	1d c0       	rjmp	.+58     	; 0x3fe <vfprintf+0xf8>
 3c4:	37 fc       	sbrc	r3, 7
 3c6:	2d c0       	rjmp	.+90     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3c8:	20 ed       	ldi	r18, 0xD0	; 208
 3ca:	28 0f       	add	r18, r24
 3cc:	2a 30       	cpi	r18, 0x0A	; 10
 3ce:	40 f0       	brcs	.+16     	; 0x3e0 <vfprintf+0xda>
 3d0:	8e 32       	cpi	r24, 0x2E	; 46
 3d2:	b9 f4       	brne	.+46     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3d4:	36 fc       	sbrc	r3, 6
 3d6:	75 c1       	rjmp	.+746    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 3d8:	23 2d       	mov	r18, r3
 3da:	20 64       	ori	r18, 0x40	; 64
 3dc:	32 2e       	mov	r3, r18
 3de:	19 c0       	rjmp	.+50     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3e0:	36 fe       	sbrs	r3, 6
 3e2:	06 c0       	rjmp	.+12     	; 0x3f0 <vfprintf+0xea>
 3e4:	8a e0       	ldi	r24, 0x0A	; 10
 3e6:	98 9e       	mul	r9, r24
 3e8:	20 0d       	add	r18, r0
 3ea:	11 24       	eor	r1, r1
 3ec:	92 2e       	mov	r9, r18
 3ee:	11 c0       	rjmp	.+34     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f0:	ea e0       	ldi	r30, 0x0A	; 10
 3f2:	2e 9e       	mul	r2, r30
 3f4:	20 0d       	add	r18, r0
 3f6:	11 24       	eor	r1, r1
 3f8:	22 2e       	mov	r2, r18
 3fa:	f3 2d       	mov	r31, r3
 3fc:	f0 62       	ori	r31, 0x20	; 32
 3fe:	3f 2e       	mov	r3, r31
 400:	08 c0       	rjmp	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	8c 36       	cpi	r24, 0x6C	; 108
 404:	21 f4       	brne	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 406:	83 2d       	mov	r24, r3
 408:	80 68       	ori	r24, 0x80	; 128
 40a:	38 2e       	mov	r3, r24
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	88 36       	cpi	r24, 0x68	; 104
 410:	41 f4       	brne	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 412:	f7 01       	movw	r30, r14
 414:	93 fd       	sbrc	r25, 3
 416:	85 91       	lpm	r24, Z+
 418:	93 ff       	sbrs	r25, 3
 41a:	81 91       	ld	r24, Z+
 41c:	7f 01       	movw	r14, r30
 41e:	81 11       	cpse	r24, r1
 420:	b3 cf       	rjmp	.-154    	; 0x388 <vfprintf+0x82>
 422:	98 2f       	mov	r25, r24
 424:	9f 7d       	andi	r25, 0xDF	; 223
 426:	95 54       	subi	r25, 0x45	; 69
 428:	93 30       	cpi	r25, 0x03	; 3
 42a:	28 f4       	brcc	.+10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42c:	0c 5f       	subi	r16, 0xFC	; 252
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	9f e3       	ldi	r25, 0x3F	; 63
 432:	99 83       	std	Y+1, r25	; 0x01
 434:	0d c0       	rjmp	.+26     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 436:	83 36       	cpi	r24, 0x63	; 99
 438:	31 f0       	breq	.+12     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43a:	83 37       	cpi	r24, 0x73	; 115
 43c:	71 f0       	breq	.+28     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 43e:	83 35       	cpi	r24, 0x53	; 83
 440:	09 f0       	breq	.+2      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 442:	55 c0       	rjmp	.+170    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 444:	20 c0       	rjmp	.+64     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 446:	f8 01       	movw	r30, r16
 448:	80 81       	ld	r24, Z
 44a:	89 83       	std	Y+1, r24	; 0x01
 44c:	0e 5f       	subi	r16, 0xFE	; 254
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	88 24       	eor	r8, r8
 452:	83 94       	inc	r8
 454:	91 2c       	mov	r9, r1
 456:	53 01       	movw	r10, r6
 458:	12 c0       	rjmp	.+36     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 45a:	28 01       	movw	r4, r16
 45c:	f2 e0       	ldi	r31, 0x02	; 2
 45e:	4f 0e       	add	r4, r31
 460:	51 1c       	adc	r5, r1
 462:	f8 01       	movw	r30, r16
 464:	a0 80       	ld	r10, Z
 466:	b1 80       	ldd	r11, Z+1	; 0x01
 468:	36 fe       	sbrs	r3, 6
 46a:	03 c0       	rjmp	.+6      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46c:	69 2d       	mov	r22, r9
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	02 c0       	rjmp	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 472:	6f ef       	ldi	r22, 0xFF	; 255
 474:	7f ef       	ldi	r23, 0xFF	; 255
 476:	c5 01       	movw	r24, r10
 478:	4e d1       	rcall	.+668    	; 0x716 <strnlen>
 47a:	4c 01       	movw	r8, r24
 47c:	82 01       	movw	r16, r4
 47e:	f3 2d       	mov	r31, r3
 480:	ff 77       	andi	r31, 0x7F	; 127
 482:	3f 2e       	mov	r3, r31
 484:	15 c0       	rjmp	.+42     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 486:	28 01       	movw	r4, r16
 488:	22 e0       	ldi	r18, 0x02	; 2
 48a:	42 0e       	add	r4, r18
 48c:	51 1c       	adc	r5, r1
 48e:	f8 01       	movw	r30, r16
 490:	a0 80       	ld	r10, Z
 492:	b1 80       	ldd	r11, Z+1	; 0x01
 494:	36 fe       	sbrs	r3, 6
 496:	03 c0       	rjmp	.+6      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 498:	69 2d       	mov	r22, r9
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49e:	6f ef       	ldi	r22, 0xFF	; 255
 4a0:	7f ef       	ldi	r23, 0xFF	; 255
 4a2:	c5 01       	movw	r24, r10
 4a4:	2d d1       	rcall	.+602    	; 0x700 <strnlen_P>
 4a6:	4c 01       	movw	r8, r24
 4a8:	f3 2d       	mov	r31, r3
 4aa:	f0 68       	ori	r31, 0x80	; 128
 4ac:	3f 2e       	mov	r3, r31
 4ae:	82 01       	movw	r16, r4
 4b0:	33 fc       	sbrc	r3, 3
 4b2:	19 c0       	rjmp	.+50     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4b4:	82 2d       	mov	r24, r2
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	88 16       	cp	r8, r24
 4ba:	99 06       	cpc	r9, r25
 4bc:	a0 f4       	brcc	.+40     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4be:	b6 01       	movw	r22, r12
 4c0:	80 e2       	ldi	r24, 0x20	; 32
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	33 d1       	rcall	.+614    	; 0x72c <fputc>
 4c6:	2a 94       	dec	r2
 4c8:	f5 cf       	rjmp	.-22     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4ca:	f5 01       	movw	r30, r10
 4cc:	37 fc       	sbrc	r3, 7
 4ce:	85 91       	lpm	r24, Z+
 4d0:	37 fe       	sbrs	r3, 7
 4d2:	81 91       	ld	r24, Z+
 4d4:	5f 01       	movw	r10, r30
 4d6:	b6 01       	movw	r22, r12
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	28 d1       	rcall	.+592    	; 0x72c <fputc>
 4dc:	21 10       	cpse	r2, r1
 4de:	2a 94       	dec	r2
 4e0:	21 e0       	ldi	r18, 0x01	; 1
 4e2:	82 1a       	sub	r8, r18
 4e4:	91 08       	sbc	r9, r1
 4e6:	81 14       	cp	r8, r1
 4e8:	91 04       	cpc	r9, r1
 4ea:	79 f7       	brne	.-34     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ec:	e1 c0       	rjmp	.+450    	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 4ee:	84 36       	cpi	r24, 0x64	; 100
 4f0:	11 f0       	breq	.+4      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f2:	89 36       	cpi	r24, 0x69	; 105
 4f4:	39 f5       	brne	.+78     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 4f6:	f8 01       	movw	r30, r16
 4f8:	37 fe       	sbrs	r3, 7
 4fa:	07 c0       	rjmp	.+14     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fc:	60 81       	ld	r22, Z
 4fe:	71 81       	ldd	r23, Z+1	; 0x01
 500:	82 81       	ldd	r24, Z+2	; 0x02
 502:	93 81       	ldd	r25, Z+3	; 0x03
 504:	0c 5f       	subi	r16, 0xFC	; 252
 506:	1f 4f       	sbci	r17, 0xFF	; 255
 508:	08 c0       	rjmp	.+16     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 50a:	60 81       	ld	r22, Z
 50c:	71 81       	ldd	r23, Z+1	; 0x01
 50e:	07 2e       	mov	r0, r23
 510:	00 0c       	add	r0, r0
 512:	88 0b       	sbc	r24, r24
 514:	99 0b       	sbc	r25, r25
 516:	0e 5f       	subi	r16, 0xFE	; 254
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	f3 2d       	mov	r31, r3
 51c:	ff 76       	andi	r31, 0x6F	; 111
 51e:	3f 2e       	mov	r3, r31
 520:	97 ff       	sbrs	r25, 7
 522:	09 c0       	rjmp	.+18     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 524:	90 95       	com	r25
 526:	80 95       	com	r24
 528:	70 95       	com	r23
 52a:	61 95       	neg	r22
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	f0 68       	ori	r31, 0x80	; 128
 534:	3f 2e       	mov	r3, r31
 536:	2a e0       	ldi	r18, 0x0A	; 10
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	a3 01       	movw	r20, r6
 53c:	33 d1       	rcall	.+614    	; 0x7a4 <__ultoa_invert>
 53e:	88 2e       	mov	r8, r24
 540:	86 18       	sub	r8, r6
 542:	44 c0       	rjmp	.+136    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 544:	85 37       	cpi	r24, 0x75	; 117
 546:	31 f4       	brne	.+12     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 548:	23 2d       	mov	r18, r3
 54a:	2f 7e       	andi	r18, 0xEF	; 239
 54c:	b2 2e       	mov	r11, r18
 54e:	2a e0       	ldi	r18, 0x0A	; 10
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	25 c0       	rjmp	.+74     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 554:	93 2d       	mov	r25, r3
 556:	99 7f       	andi	r25, 0xF9	; 249
 558:	b9 2e       	mov	r11, r25
 55a:	8f 36       	cpi	r24, 0x6F	; 111
 55c:	c1 f0       	breq	.+48     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 55e:	18 f4       	brcc	.+6      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 560:	88 35       	cpi	r24, 0x58	; 88
 562:	79 f0       	breq	.+30     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 564:	ae c0       	rjmp	.+348    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 566:	80 37       	cpi	r24, 0x70	; 112
 568:	19 f0       	breq	.+6      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56a:	88 37       	cpi	r24, 0x78	; 120
 56c:	21 f0       	breq	.+8      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 56e:	a9 c0       	rjmp	.+338    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 570:	e9 2f       	mov	r30, r25
 572:	e0 61       	ori	r30, 0x10	; 16
 574:	be 2e       	mov	r11, r30
 576:	b4 fe       	sbrs	r11, 4
 578:	0d c0       	rjmp	.+26     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 57a:	fb 2d       	mov	r31, r11
 57c:	f4 60       	ori	r31, 0x04	; 4
 57e:	bf 2e       	mov	r11, r31
 580:	09 c0       	rjmp	.+18     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 582:	34 fe       	sbrs	r3, 4
 584:	0a c0       	rjmp	.+20     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 586:	29 2f       	mov	r18, r25
 588:	26 60       	ori	r18, 0x06	; 6
 58a:	b2 2e       	mov	r11, r18
 58c:	06 c0       	rjmp	.+12     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 58e:	28 e0       	ldi	r18, 0x08	; 8
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	05 c0       	rjmp	.+10     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 594:	20 e1       	ldi	r18, 0x10	; 16
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	02 c0       	rjmp	.+4      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 59a:	20 e1       	ldi	r18, 0x10	; 16
 59c:	32 e0       	ldi	r19, 0x02	; 2
 59e:	f8 01       	movw	r30, r16
 5a0:	b7 fe       	sbrs	r11, 7
 5a2:	07 c0       	rjmp	.+14     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5a4:	60 81       	ld	r22, Z
 5a6:	71 81       	ldd	r23, Z+1	; 0x01
 5a8:	82 81       	ldd	r24, Z+2	; 0x02
 5aa:	93 81       	ldd	r25, Z+3	; 0x03
 5ac:	0c 5f       	subi	r16, 0xFC	; 252
 5ae:	1f 4f       	sbci	r17, 0xFF	; 255
 5b0:	06 c0       	rjmp	.+12     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5b2:	60 81       	ld	r22, Z
 5b4:	71 81       	ldd	r23, Z+1	; 0x01
 5b6:	80 e0       	ldi	r24, 0x00	; 0
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	a3 01       	movw	r20, r6
 5c0:	f1 d0       	rcall	.+482    	; 0x7a4 <__ultoa_invert>
 5c2:	88 2e       	mov	r8, r24
 5c4:	86 18       	sub	r8, r6
 5c6:	fb 2d       	mov	r31, r11
 5c8:	ff 77       	andi	r31, 0x7F	; 127
 5ca:	3f 2e       	mov	r3, r31
 5cc:	36 fe       	sbrs	r3, 6
 5ce:	0d c0       	rjmp	.+26     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d0:	23 2d       	mov	r18, r3
 5d2:	2e 7f       	andi	r18, 0xFE	; 254
 5d4:	a2 2e       	mov	r10, r18
 5d6:	89 14       	cp	r8, r9
 5d8:	58 f4       	brcc	.+22     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5da:	34 fe       	sbrs	r3, 4
 5dc:	0b c0       	rjmp	.+22     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5de:	32 fc       	sbrc	r3, 2
 5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e2:	83 2d       	mov	r24, r3
 5e4:	8e 7e       	andi	r24, 0xEE	; 238
 5e6:	a8 2e       	mov	r10, r24
 5e8:	05 c0       	rjmp	.+10     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ea:	b8 2c       	mov	r11, r8
 5ec:	a3 2c       	mov	r10, r3
 5ee:	03 c0       	rjmp	.+6      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f0:	b8 2c       	mov	r11, r8
 5f2:	01 c0       	rjmp	.+2      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f4:	b9 2c       	mov	r11, r9
 5f6:	a4 fe       	sbrs	r10, 4
 5f8:	0f c0       	rjmp	.+30     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5fa:	fe 01       	movw	r30, r28
 5fc:	e8 0d       	add	r30, r8
 5fe:	f1 1d       	adc	r31, r1
 600:	80 81       	ld	r24, Z
 602:	80 33       	cpi	r24, 0x30	; 48
 604:	21 f4       	brne	.+8      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 606:	9a 2d       	mov	r25, r10
 608:	99 7e       	andi	r25, 0xE9	; 233
 60a:	a9 2e       	mov	r10, r25
 60c:	09 c0       	rjmp	.+18     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 60e:	a2 fe       	sbrs	r10, 2
 610:	06 c0       	rjmp	.+12     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 612:	b3 94       	inc	r11
 614:	b3 94       	inc	r11
 616:	04 c0       	rjmp	.+8      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 618:	8a 2d       	mov	r24, r10
 61a:	86 78       	andi	r24, 0x86	; 134
 61c:	09 f0       	breq	.+2      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 61e:	b3 94       	inc	r11
 620:	a3 fc       	sbrc	r10, 3
 622:	10 c0       	rjmp	.+32     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 624:	a0 fe       	sbrs	r10, 0
 626:	06 c0       	rjmp	.+12     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 628:	b2 14       	cp	r11, r2
 62a:	80 f4       	brcc	.+32     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 62c:	28 0c       	add	r2, r8
 62e:	92 2c       	mov	r9, r2
 630:	9b 18       	sub	r9, r11
 632:	0d c0       	rjmp	.+26     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 634:	b2 14       	cp	r11, r2
 636:	58 f4       	brcc	.+22     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 638:	b6 01       	movw	r22, r12
 63a:	80 e2       	ldi	r24, 0x20	; 32
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	76 d0       	rcall	.+236    	; 0x72c <fputc>
 640:	b3 94       	inc	r11
 642:	f8 cf       	rjmp	.-16     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 644:	b2 14       	cp	r11, r2
 646:	18 f4       	brcc	.+6      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 648:	2b 18       	sub	r2, r11
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64c:	98 2c       	mov	r9, r8
 64e:	21 2c       	mov	r2, r1
 650:	a4 fe       	sbrs	r10, 4
 652:	0f c0       	rjmp	.+30     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 654:	b6 01       	movw	r22, r12
 656:	80 e3       	ldi	r24, 0x30	; 48
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	68 d0       	rcall	.+208    	; 0x72c <fputc>
 65c:	a2 fe       	sbrs	r10, 2
 65e:	16 c0       	rjmp	.+44     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 660:	a1 fc       	sbrc	r10, 1
 662:	03 c0       	rjmp	.+6      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 664:	88 e7       	ldi	r24, 0x78	; 120
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 66a:	88 e5       	ldi	r24, 0x58	; 88
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	b6 01       	movw	r22, r12
 670:	0c c0       	rjmp	.+24     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 672:	8a 2d       	mov	r24, r10
 674:	86 78       	andi	r24, 0x86	; 134
 676:	51 f0       	breq	.+20     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 678:	a1 fe       	sbrs	r10, 1
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 67c:	8b e2       	ldi	r24, 0x2B	; 43
 67e:	01 c0       	rjmp	.+2      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 680:	80 e2       	ldi	r24, 0x20	; 32
 682:	a7 fc       	sbrc	r10, 7
 684:	8d e2       	ldi	r24, 0x2D	; 45
 686:	b6 01       	movw	r22, r12
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	50 d0       	rcall	.+160    	; 0x72c <fputc>
 68c:	89 14       	cp	r8, r9
 68e:	30 f4       	brcc	.+12     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 690:	b6 01       	movw	r22, r12
 692:	80 e3       	ldi	r24, 0x30	; 48
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	4a d0       	rcall	.+148    	; 0x72c <fputc>
 698:	9a 94       	dec	r9
 69a:	f8 cf       	rjmp	.-16     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 69c:	8a 94       	dec	r8
 69e:	f3 01       	movw	r30, r6
 6a0:	e8 0d       	add	r30, r8
 6a2:	f1 1d       	adc	r31, r1
 6a4:	80 81       	ld	r24, Z
 6a6:	b6 01       	movw	r22, r12
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	40 d0       	rcall	.+128    	; 0x72c <fputc>
 6ac:	81 10       	cpse	r8, r1
 6ae:	f6 cf       	rjmp	.-20     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 6b0:	22 20       	and	r2, r2
 6b2:	09 f4       	brne	.+2      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b4:	4e ce       	rjmp	.-868    	; 0x352 <vfprintf+0x4c>
 6b6:	b6 01       	movw	r22, r12
 6b8:	80 e2       	ldi	r24, 0x20	; 32
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	37 d0       	rcall	.+110    	; 0x72c <fputc>
 6be:	2a 94       	dec	r2
 6c0:	f7 cf       	rjmp	.-18     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6c2:	f6 01       	movw	r30, r12
 6c4:	86 81       	ldd	r24, Z+6	; 0x06
 6c6:	97 81       	ldd	r25, Z+7	; 0x07
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	9f ef       	ldi	r25, 0xFF	; 255
 6ce:	2b 96       	adiw	r28, 0x0b	; 11
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	1f 91       	pop	r17
 6e0:	0f 91       	pop	r16
 6e2:	ff 90       	pop	r15
 6e4:	ef 90       	pop	r14
 6e6:	df 90       	pop	r13
 6e8:	cf 90       	pop	r12
 6ea:	bf 90       	pop	r11
 6ec:	af 90       	pop	r10
 6ee:	9f 90       	pop	r9
 6f0:	8f 90       	pop	r8
 6f2:	7f 90       	pop	r7
 6f4:	6f 90       	pop	r6
 6f6:	5f 90       	pop	r5
 6f8:	4f 90       	pop	r4
 6fa:	3f 90       	pop	r3
 6fc:	2f 90       	pop	r2
 6fe:	08 95       	ret

00000700 <strnlen_P>:
 700:	fc 01       	movw	r30, r24
 702:	05 90       	lpm	r0, Z+
 704:	61 50       	subi	r22, 0x01	; 1
 706:	70 40       	sbci	r23, 0x00	; 0
 708:	01 10       	cpse	r0, r1
 70a:	d8 f7       	brcc	.-10     	; 0x702 <strnlen_P+0x2>
 70c:	80 95       	com	r24
 70e:	90 95       	com	r25
 710:	8e 0f       	add	r24, r30
 712:	9f 1f       	adc	r25, r31
 714:	08 95       	ret

00000716 <strnlen>:
 716:	fc 01       	movw	r30, r24
 718:	61 50       	subi	r22, 0x01	; 1
 71a:	70 40       	sbci	r23, 0x00	; 0
 71c:	01 90       	ld	r0, Z+
 71e:	01 10       	cpse	r0, r1
 720:	d8 f7       	brcc	.-10     	; 0x718 <strnlen+0x2>
 722:	80 95       	com	r24
 724:	90 95       	com	r25
 726:	8e 0f       	add	r24, r30
 728:	9f 1f       	adc	r25, r31
 72a:	08 95       	ret

0000072c <fputc>:
 72c:	0f 93       	push	r16
 72e:	1f 93       	push	r17
 730:	cf 93       	push	r28
 732:	df 93       	push	r29
 734:	fb 01       	movw	r30, r22
 736:	23 81       	ldd	r18, Z+3	; 0x03
 738:	21 fd       	sbrc	r18, 1
 73a:	03 c0       	rjmp	.+6      	; 0x742 <fputc+0x16>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	2c c0       	rjmp	.+88     	; 0x79a <fputc+0x6e>
 742:	22 ff       	sbrs	r18, 2
 744:	16 c0       	rjmp	.+44     	; 0x772 <fputc+0x46>
 746:	46 81       	ldd	r20, Z+6	; 0x06
 748:	57 81       	ldd	r21, Z+7	; 0x07
 74a:	24 81       	ldd	r18, Z+4	; 0x04
 74c:	35 81       	ldd	r19, Z+5	; 0x05
 74e:	42 17       	cp	r20, r18
 750:	53 07       	cpc	r21, r19
 752:	44 f4       	brge	.+16     	; 0x764 <fputc+0x38>
 754:	a0 81       	ld	r26, Z
 756:	b1 81       	ldd	r27, Z+1	; 0x01
 758:	9d 01       	movw	r18, r26
 75a:	2f 5f       	subi	r18, 0xFF	; 255
 75c:	3f 4f       	sbci	r19, 0xFF	; 255
 75e:	31 83       	std	Z+1, r19	; 0x01
 760:	20 83       	st	Z, r18
 762:	8c 93       	st	X, r24
 764:	26 81       	ldd	r18, Z+6	; 0x06
 766:	37 81       	ldd	r19, Z+7	; 0x07
 768:	2f 5f       	subi	r18, 0xFF	; 255
 76a:	3f 4f       	sbci	r19, 0xFF	; 255
 76c:	37 83       	std	Z+7, r19	; 0x07
 76e:	26 83       	std	Z+6, r18	; 0x06
 770:	14 c0       	rjmp	.+40     	; 0x79a <fputc+0x6e>
 772:	8b 01       	movw	r16, r22
 774:	ec 01       	movw	r28, r24
 776:	fb 01       	movw	r30, r22
 778:	00 84       	ldd	r0, Z+8	; 0x08
 77a:	f1 85       	ldd	r31, Z+9	; 0x09
 77c:	e0 2d       	mov	r30, r0
 77e:	09 95       	icall
 780:	89 2b       	or	r24, r25
 782:	e1 f6       	brne	.-72     	; 0x73c <fputc+0x10>
 784:	d8 01       	movw	r26, r16
 786:	16 96       	adiw	r26, 0x06	; 6
 788:	8d 91       	ld	r24, X+
 78a:	9c 91       	ld	r25, X
 78c:	17 97       	sbiw	r26, 0x07	; 7
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	17 96       	adiw	r26, 0x07	; 7
 792:	9c 93       	st	X, r25
 794:	8e 93       	st	-X, r24
 796:	16 97       	sbiw	r26, 0x06	; 6
 798:	ce 01       	movw	r24, r28
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	1f 91       	pop	r17
 7a0:	0f 91       	pop	r16
 7a2:	08 95       	ret

000007a4 <__ultoa_invert>:
 7a4:	fa 01       	movw	r30, r20
 7a6:	aa 27       	eor	r26, r26
 7a8:	28 30       	cpi	r18, 0x08	; 8
 7aa:	51 f1       	breq	.+84     	; 0x800 <__ultoa_invert+0x5c>
 7ac:	20 31       	cpi	r18, 0x10	; 16
 7ae:	81 f1       	breq	.+96     	; 0x810 <__ultoa_invert+0x6c>
 7b0:	e8 94       	clt
 7b2:	6f 93       	push	r22
 7b4:	6e 7f       	andi	r22, 0xFE	; 254
 7b6:	6e 5f       	subi	r22, 0xFE	; 254
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	8f 4f       	sbci	r24, 0xFF	; 255
 7bc:	9f 4f       	sbci	r25, 0xFF	; 255
 7be:	af 4f       	sbci	r26, 0xFF	; 255
 7c0:	b1 e0       	ldi	r27, 0x01	; 1
 7c2:	3e d0       	rcall	.+124    	; 0x840 <__ultoa_invert+0x9c>
 7c4:	b4 e0       	ldi	r27, 0x04	; 4
 7c6:	3c d0       	rcall	.+120    	; 0x840 <__ultoa_invert+0x9c>
 7c8:	67 0f       	add	r22, r23
 7ca:	78 1f       	adc	r23, r24
 7cc:	89 1f       	adc	r24, r25
 7ce:	9a 1f       	adc	r25, r26
 7d0:	a1 1d       	adc	r26, r1
 7d2:	68 0f       	add	r22, r24
 7d4:	79 1f       	adc	r23, r25
 7d6:	8a 1f       	adc	r24, r26
 7d8:	91 1d       	adc	r25, r1
 7da:	a1 1d       	adc	r26, r1
 7dc:	6a 0f       	add	r22, r26
 7de:	71 1d       	adc	r23, r1
 7e0:	81 1d       	adc	r24, r1
 7e2:	91 1d       	adc	r25, r1
 7e4:	a1 1d       	adc	r26, r1
 7e6:	20 d0       	rcall	.+64     	; 0x828 <__ultoa_invert+0x84>
 7e8:	09 f4       	brne	.+2      	; 0x7ec <__ultoa_invert+0x48>
 7ea:	68 94       	set
 7ec:	3f 91       	pop	r19
 7ee:	2a e0       	ldi	r18, 0x0A	; 10
 7f0:	26 9f       	mul	r18, r22
 7f2:	11 24       	eor	r1, r1
 7f4:	30 19       	sub	r19, r0
 7f6:	30 5d       	subi	r19, 0xD0	; 208
 7f8:	31 93       	st	Z+, r19
 7fa:	de f6       	brtc	.-74     	; 0x7b2 <__ultoa_invert+0xe>
 7fc:	cf 01       	movw	r24, r30
 7fe:	08 95       	ret
 800:	46 2f       	mov	r20, r22
 802:	47 70       	andi	r20, 0x07	; 7
 804:	40 5d       	subi	r20, 0xD0	; 208
 806:	41 93       	st	Z+, r20
 808:	b3 e0       	ldi	r27, 0x03	; 3
 80a:	0f d0       	rcall	.+30     	; 0x82a <__ultoa_invert+0x86>
 80c:	c9 f7       	brne	.-14     	; 0x800 <__ultoa_invert+0x5c>
 80e:	f6 cf       	rjmp	.-20     	; 0x7fc <__ultoa_invert+0x58>
 810:	46 2f       	mov	r20, r22
 812:	4f 70       	andi	r20, 0x0F	; 15
 814:	40 5d       	subi	r20, 0xD0	; 208
 816:	4a 33       	cpi	r20, 0x3A	; 58
 818:	18 f0       	brcs	.+6      	; 0x820 <__ultoa_invert+0x7c>
 81a:	49 5d       	subi	r20, 0xD9	; 217
 81c:	31 fd       	sbrc	r19, 1
 81e:	40 52       	subi	r20, 0x20	; 32
 820:	41 93       	st	Z+, r20
 822:	02 d0       	rcall	.+4      	; 0x828 <__ultoa_invert+0x84>
 824:	a9 f7       	brne	.-22     	; 0x810 <__ultoa_invert+0x6c>
 826:	ea cf       	rjmp	.-44     	; 0x7fc <__ultoa_invert+0x58>
 828:	b4 e0       	ldi	r27, 0x04	; 4
 82a:	a6 95       	lsr	r26
 82c:	97 95       	ror	r25
 82e:	87 95       	ror	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	ba 95       	dec	r27
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0x86>
 838:	00 97       	sbiw	r24, 0x00	; 0
 83a:	61 05       	cpc	r22, r1
 83c:	71 05       	cpc	r23, r1
 83e:	08 95       	ret
 840:	9b 01       	movw	r18, r22
 842:	ac 01       	movw	r20, r24
 844:	0a 2e       	mov	r0, r26
 846:	06 94       	lsr	r0
 848:	57 95       	ror	r21
 84a:	47 95       	ror	r20
 84c:	37 95       	ror	r19
 84e:	27 95       	ror	r18
 850:	ba 95       	dec	r27
 852:	c9 f7       	brne	.-14     	; 0x846 <__ultoa_invert+0xa2>
 854:	62 0f       	add	r22, r18
 856:	73 1f       	adc	r23, r19
 858:	84 1f       	adc	r24, r20
 85a:	95 1f       	adc	r25, r21
 85c:	a0 1d       	adc	r26, r0
 85e:	08 95       	ret

00000860 <_exit>:
 860:	f8 94       	cli

00000862 <__stop_program>:
 862:	ff cf       	rjmp	.-2      	; 0x862 <__stop_program>
